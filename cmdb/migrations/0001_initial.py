# Generated by Django 2.0.4 on 2018-04-29 15:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_id', models.CharField(blank=True, db_index=True, max_length=128, null=True, unique=True, verbose_name='资产号')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
            },
        ),
        migrations.CreateModel(
            name='AssetStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(blank=True, max_length=64, unique=True)),
                ('describe', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '状态表',
                'verbose_name_plural': '状态表',
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type_name', models.CharField(blank=True, max_length=128, unique=True)),
                ('describe', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '资产类型',
                'verbose_name_plural': '资产类型',
            },
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='业务线')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('contact', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL, verbose_name='负责人')),
            ],
            options={
                'verbose_name': '产品线信息',
                'verbose_name_plural': '产品线信息',
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_num', models.CharField(blank=True, max_length=30, null=True, verbose_name='机柜号')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Asset')),
            ],
            options={
                'verbose_name': '机柜信息',
                'verbose_name_plural': '机柜信息',
            },
        ),
        migrations.CreateModel(
            name='CabinetSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_spec_name', models.CharField(blank=True, max_length=64, verbose_name='机柜规格')),
                ('u_num', models.IntegerField(blank=True, default=42, verbose_name='机柜U数')),
                ('current_type', models.CharField(blank=True, choices=[('1', '国标'), ('2', '欧标')], max_length=32, verbose_name='电源插头类型')),
            ],
            options={
                'verbose_name': '机柜规格信息',
                'verbose_name_plural': '机柜规格信息',
            },
        ),
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datacenter_name', models.CharField(max_length=64, verbose_name='显示名字')),
                ('addr', models.CharField(blank=True, max_length=255, verbose_name='数据中心地址')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='数据中心电话')),
                ('contact', models.CharField(blank=True, max_length=20, null=True, verbose_name='销售/客户经理')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='销售/客户经理电话')),
                ('bandwith', models.CharField(blank=True, max_length=30, null=True, verbose_name='带宽')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '数据中心信息',
                'verbose_name_plural': '数据中心信息',
            },
        ),
        migrations.CreateModel(
            name='PhysicalDisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='硬盘名')),
                ('disk_size', models.CharField(blank=True, max_length=32, null=True, verbose_name='硬盘大小')),
                ('disk_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='硬盘类型')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '物理机硬盘信息',
                'verbose_name_plural': '物理机硬盘信息',
            },
        ),
        migrations.CreateModel(
            name='PhysicalNic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nic_name', models.CharField(blank=True, max_length=128, verbose_name='网卡名')),
                ('hwaddr', models.CharField(blank=True, max_length=128, null=True, verbose_name='网卡MAC')),
                ('up', models.BooleanField(default=False)),
                ('netmask', models.CharField(blank=True, max_length=64, null=True)),
                ('ipaddr', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='管理IP')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '物理机网卡部件信息',
                'verbose_name_plural': '物理机网卡部件信息',
            },
        ),
        migrations.CreateModel(
            name='PhysicalServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(blank=True, max_length=128, null=True)),
                ('sn', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='快速服务编号')),
                ('manufactory', models.CharField(blank=True, max_length=128, null=True, verbose_name='厂商')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='型号')),
                ('cabinet_order', models.CharField(blank=True, max_length=32, null=True, verbose_name='机柜中的位置')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='管理IP')),
                ('business_ip', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='业务IP')),
                ('os_platform', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统')),
                ('os_version', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统版本')),
                ('cpu_logic_count', models.IntegerField(blank=True, null=True)),
                ('cpu_physical_count', models.IntegerField(blank=True, null=True)),
                ('cpu_model', models.CharField(blank=True, max_length=128, null=True)),
                ('memory_total', models.IntegerField(blank=True, null=True)),
                ('purchase_time', models.DateTimeField(blank=True, null=True, verbose_name='采购时间')),
                ('guarantee_repair_time', models.DateTimeField(blank=True, null=True, verbose_name='保修时间')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('describe', models.TextField(blank=True, null=True)),
                ('asset', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Asset')),
                ('business_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.BusinessUnit')),
                ('cabinet_num', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Cabinet', verbose_name='机柜')),
            ],
            options={
                'verbose_name': '物理服务器表',
                'verbose_name_plural': '物理服务器表',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch_name', models.CharField(blank=True, db_index=True, max_length=32, unique=True, verbose_name='交换机名')),
                ('sn', models.CharField(blank=True, max_length=32, null=True, verbose_name='快速服务编码')),
                ('manufactory', models.CharField(blank=True, max_length=32, null=True, verbose_name='厂商')),
                ('model', models.CharField(blank=True, max_length=32, null=True, verbose_name='型号')),
                ('memory_total', models.CharField(blank=True, max_length=32, null=True, verbose_name='内存')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Asset')),
            ],
            options={
                'verbose_name': '交换机信息',
                'verbose_name_plural': '交换机信息',
            },
        ),
        migrations.CreateModel(
            name='SwitchPort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='端口名')),
                ('port_mac', models.CharField(blank=True, max_length=64, null=True, verbose_name='端口mac')),
                ('study_mac', models.CharField(blank=True, max_length=64, null=True, verbose_name='学习mac')),
                ('up', models.BooleanField(default=False, verbose_name='是否活动')),
                ('switch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Switch')),
            ],
            options={
                'verbose_name': '交换机端口信息',
                'verbose_name_plural': '交换机端口信息',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(blank=True, max_length=128, unique=True)),
                ('describe', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '标签信息',
                'verbose_name_plural': '标签信息',
            },
        ),
        migrations.AddField(
            model_name='physicalserver',
            name='tag',
            field=models.ManyToManyField(blank=True, null=True, to='cmdb.Tag'),
        ),
        migrations.AddField(
            model_name='physicalnic',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.PhysicalServer'),
        ),
        migrations.AddField(
            model_name='physicaldisk',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.PhysicalServer'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='cabinet_spec',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.CabinetSpec'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='datacenter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.DataCenter'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.AssetStatus'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.AssetType'),
        ),
        migrations.AlterIndexTogether(
            name='physicalserver',
            index_together={('sn', 'asset')},
        ),
    ]
